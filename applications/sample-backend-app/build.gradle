buildscript {
    ext {
        kotlinVersion = '1.3.0'
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '0.9.7'
}


ext {
    springCloudVersion = 'Finchley.SR2'
}
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'org.bk.samples'
version = 'v1'
sourceCompatibility = 1.8

repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    runtime("io.micrometer:micrometer-registry-prometheus")
    testCompile('io.projectreactor:reactor-test')

    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-starter-zipkin")
    compile("org.springframework.amqp:spring-rabbit")

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testCompile('io.projectreactor:reactor-test')
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//for minikube environment
//docker {
//    url = 'https://192.168.99.100:2376'
//    certPath = new File(System.properties['user.home'], '/.minikube/certs')
//}

//task createDockerImage(type: DockerBuildImage) {
//    inputDir = file('.')
//    dockerFile = project.file('docker/Dockerfile')
//    tags = ['sample-service-app:' + project.version]
//}

jib {
    to {
        image = "bijukunjummen/sample-backend-app:${project.version}"
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    baseName = 'sample-backend-app'
    version = "${project.version}"
}
//createDockerImage.dependsOn build